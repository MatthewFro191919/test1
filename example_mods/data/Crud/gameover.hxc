import flixel.addons.transition.FlxTransitionableState;
import flixel.math.FlxMath;
import flixel.math.FlxRect;
import flixel.math.FlxBasePoint;
import deepend.game.ColorSprite;

final RESTART = 0;
final CLOSE = 1;
final ZONES = [];
ZONES[RESTART] = FlxRect.get(350, 350, 286, 70);
ZONES[CLOSE] = FlxRect.get(350, 435, 286, 70);

var p = FlxBasePoint.get();
var popup:FlxSprite;
var chooser:FlxSprite;
var noob:ColorSprite;
var tween:FlxTween;

var selected = RESTART;
var mouseSelect = false;


function loadImages() {
	return ['stages/msPaint/overlay/gameover', 'stages/msPaint/overlay/gameoverselect'];
}

function loadSounds() {
	return ['sound:error'];
}

function onCreate() {
	gameOver.cameras = [game.camOther];

	noob = new ColorSprite(0, 0, FlxG.width, FlxG.height);
	noob.alpha = 0;
	tween = FlxTween.tween(noob, {alpha: .7});
	gameOver.add(noob);

	game.persistentDraw = true;
	popup = new FlxSprite(0, 0, Paths.image('stages/msPaint/overlay/gameover'));
	popup.antialiasing = false;
	popup.screenCenter();
	gameOver.add(popup);

	chooser = new FlxSprite(0, 0, Paths.image('stages/msPaint/overlay/gameoverselect'));
	chooser.antialiasing = false;
	chooser.screenCenter();
	chooser.x -= 150;
	chooser.y += 30;
	gameOver.add(chooser);

	FlxG.mouse.visible = true;
	setSelected(RESTART);

	FlxG.sound.play(Paths.sound('error'));
}

function onDestroy() {
	FlxG.mouse.visible = false;
	FlxDestroyUtil.putArray(ZONES);
	p = FlxDestroyUtil.put(p);
	if (tween != null)
		tween.cancel();
	tween = null;
}

function setSelected(v:Int) {
	selected = FlxMath.wrap(v, RESTART, CLOSE);
	final zone = ZONES[selected];
	chooser.setPosition(zone.x, zone.y);
}

function onUpdate() {
	if (controls.UI_DOWN_P || FlxG.keys.justPressed.TAB && !FlxG.keys.pressed.SHIFT)
		setSelected(selected + 1);
	else if (controls.UI_UP_P || FlxG.keys.justPressed.TAB && FlxG.keys.pressed.SHIFT)
		setSelected(selected - 1);
	if (FlxG.mouse.justMoved) {
		//chooser.visible = false;
		mouseSelect = false;
		for (i => v in ZONES) {
			if (FlxMath.pointInFlxRect(FlxG.mouse.gameX, FlxG.mouse.gameY, v)) {
				mouseSelect = true;
				setSelected(i);
			}
		}
	}
	if (controls.ACCEPT || FlxG.mouse.justPressed && mouseSelect) {
		switch selected {
			case RESTART:
				FlxTransitionableState.skipNextTransIn = true;
				FlxTransitionableState.skipNextTransOut = true;
				MusicBeatState.resetState();
			case CLOSE:
				gameOver.leave();
		}
	} else if (controls.BACK) {
		gameOver.leave();
	}
}